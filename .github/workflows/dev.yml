name: Lint & Test

env:
  POSTGRES_HOST: 'localhost'
  POSTGRES_PORT: 5432
  POSTGRES_USERNAME: 'postgres'
  POSTGRES_PASSWORD: 'password'
  POSTGRES_DATABASE: 'postgres'

on:
  push:
    branches:
      - dev
  pull_request:
    branches:
      - dev

jobs:
  lint:
    name: 'Lint Code'
    runs-on: 'ubuntu-latest'
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - uses: actions/setup-node@v3
        with:
          node-version: 16
          cache: 'yarn'
      - name: Install yarn
        run: npm install -g yarn
      - name: 'Install dependencies'
        run: yarn --prefer-offline
      - name: 'Check commit message'
        run: git log -1 --pretty=format:"%s" | npx commitlint
      - name: 'Lint code'
        run: yarn lint
  test:
    name: 'Testing'
    services:
      postgres:
        image: postgres:14
        env:
          POSTGRES_PASSWORD: password
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432
    runs-on: 'ubuntu-latest'
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - uses: actions/setup-node@v3
        with:
          node-version: 16
          cache: 'yarn'
      - name: Install yarn
        run: npm install -g yarn
      - name: 'Install dependencies'
        run: yarn --prefer-offline
      - name: 'Lint code'
        run: yarn test
  deploy:
    name: 'Deploy'
    runs-on: 'ubuntu-latest'
    needs: [lint, test]
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - uses: actions/setup-node@v3
        with:
          node-version: 16
          cache: 'yarn'
      - name: Install yarn
        run: npm install -g yarn
      - name: 'Install dependencies'
        run: yarn --prefer-offline
      - name: 'Build production'
        run: yarn build
      - name: 'Zip files'
        run: zip -r chat-be.zip tsconfig.json build package.json
      - name: Upload file build to host
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          key: ${{ secrets.PRIVATE_KEY }}
          port: 22
          source: 'chat-be.zip'
          target: '/tmp'
      - name: Deploy using ssh
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          key: ${{ secrets.PRIVATE_KEY }}
          port: 22
          script: sh /home/ec2-user/chat/chat-be.sh
